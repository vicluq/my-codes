#include <stdio.h>
#include <stdlib.h>
#include <string.h>



int main () {

struct lista { 
    
    char nome[20]; //para indicar que é string eu poderia escrever como ponteiro, pois strings são ponteiros: char *nome;
    int idade;
    struct lista *pProx; //só pode apontar par algo que ja esta definido

};

struct lista primeira; 
    strncpy(primeira.nome, "Victoria", 9); // essa função serve para poder copiar a string e atribuir a uma variavel char da struct e não dar erros
    primeira.idade = 18;

struct lista segunda;
     strncpy(segunda.nome, "Victorio", 9);
    segunda.idade = 19;

struct lista terceira;
     strncpy(terceira.nome, "Victor", 7);
    terceira.idade = 20;

//após definir as estruturas podemos apontar uma na outra usando o ponteiro dentro delas

struct lista *pLista = 0; //Lista (ponteiro fora da estrutura) se liga a struct1 -> 2 -> 3. Os de dentro mentém a estrutura ligada
pLista = &primeira;

primeira.pProx = &segunda;
segunda.pProx = &terceira;
terceira.pProx = (struct lista *)0;


while (pLista != (struct lista *)0) {
    printf("%i\n", (*pLista).idade);
    printf("%s\n", (*pLista).nome); // o ponteiro 'head' que é a lista, pode pegar o valor de qualquer variável presente na estrutura
    pLista = (*pLista).pProx;
}




return 0;
}


